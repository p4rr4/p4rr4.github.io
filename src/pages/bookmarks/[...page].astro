---
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import Container from '@/components/Container.astro'
import Bookmark from '@/components/Bookmark.astro'
import PaginationComponent from '@/components/ui/pagination'
import type { PaginateFunction } from 'astro'
import { SITE } from '@/consts'
import Layout from '@/layouts/Layout.astro'
import { getCollection } from 'astro:content'

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  const allBookmarks = await getCollection('bookmarks', ({ data }) => !data.draft)
  return paginate(
    allBookmarks.sort((a, b) => a.data.name.localeCompare(b.data.name)),
    { pageSize: SITE.POSTS_PER_PAGE },
  )
}

const { page } = Astro.props
---

<Layout title="Bookmarks" description="Personal collection of bookmarks.">
  <Container class="flex flex-col gap-y-6">
    <Breadcrumbs 
      items={[
        { label: 'Bookmarks', icon: 'lucide:bookmark' },
        { label: `Page ${page.currentPage}`, icon: 'lucide:folder-open' },
      ]} 
    />

    <div class="flex min-h-[calc(100vh-18rem)] flex-col gap-y-8">
      <section class="flex flex-col gap-y-4">
        <ul class="not-prose flex flex-col gap-4">
          {page.data.map((bookmark) => (
            <li><Bookmark bookmark={bookmark} /></li>
          ))}
        </ul>
      </section>
    </div>

    <PaginationComponent
      currentPage={page.currentPage}
      totalPages={page.lastPage}
      baseUrl="/bookmarks/"
      client:load
    />
  </Container>
</Layout>